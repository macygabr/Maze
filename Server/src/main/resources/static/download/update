
DARKGREYBACKGROUND="\033[100m";
DARKYELLOW="\033[33m"

BLUE=$'\033[0;34m'
GREEN=$'\033[0;32m'
RED=$'\033[31m'
END="\033[0m";

push="
function push {
#Default commit 'beckup'
  cd \$(pwd)
  find . -type f  -name "\*.cc" -o -name "\*.h" -o -name "\*.cpp" | xargs clang-format -style='{BasedOnStyle: Google}' -i
  if [ -n "\$1" ]
  then
    commit=\$1
  else
  commit="backup"
  fi
  git checkout -b develop
  git checkout develop
  git add .
  git commit -m \$commit
  git push --set-upstream origin develop
}
"

brsw="function brsw {
 if [ -d /opt/goinfre/\$(whoami)/homebrew ];
 then
  eval '\$(/opt/goinfre/\$(whoami)/homebrew/bin/brew shellenv)'
  chmod -R go-w '\$(brew --prefix)/share/zsh'
 else
  cd /opt/goinfre/\$(whoami)
  git clone https://github.com/Homebrew/brew homebrew
  eval '\$(/opt/goinfre/\$(whoami)/homebrew/bin/brew shellenv)'
  brew update --force --quiet
  chmod -R go-w '\$(brew --prefix)/share/zsh'
  brew install lcov
 fi
}
"

check="function check {
echo '\\\033[32mClone\\\033[0m'
git clone \$1
cd \$(echo \$1 | awk -F "/" '{print \$NF}' | sed -r 's/.git+//')
git checkout develop
open -a 'Visual Studio Code' "."

echo '\\\033[32mCheck clang-format\\\033[0m'
cp ../materials/linters/.clang-format .
clang-format -n *.c *.h

echo '\\\033[32mCpp check\\\033[0m'
cppcheck --enable=all --suppress=missingIncludeSystem *.c

sleep 2

echo '\\\033[32mBuild\\\033[0m'
gcc -Wall -Wextra -Werror pong.c

echo '\\\033[32mLeaks\\\033[0m'
leaks -atExit -- ./*.out 
}
"

clone="function clone {
    echo '\\\033[32mClone\\\033[0m'
  git clone \$1
  cd \$(echo \$1 | awk -F "/" '{print \$NF}' | sed -r 's/.git+//')
  git checkout -b develop
  echo '\\\033[32mChange gitignore\\\033[0m'
  sleep 1
  echo '\n# My ignore list' >> .gitignore
  echo '.DS_Store' >> .gitignore
  open -a 'Visual Studio Code' '.'
  push start
}"

clean="function clean {
#!/bin/bash
# Colors
blue=$'\\\033[0;34m'
cyan=$'\\\033[1;96m'
reset=$'\\\033[0;39m'
green=$'\\\033[0;32m'
red=$'\\\033[0;31m'
# Initial total space, used and available
echo \"\$cyan\"'----|Before cleanup|----|'
echo \"\$blue\"'Size  '\"\$cyan\"'|  '\"\$red\"'Used  '\"\$cyan\"'|  '\"\$green\"'Avail '\"\$cyan\"'|'\"\$reset\"
df -h | grep Users | awk -v cyan=\"\$cyan\" -v green=\"\$green\" -v blue=\"\$blue\" -v red=\"\$red\" '{print blue \$2 \" \"cyan\"=  \" red \$3 cyan\" +  \"  green \$4 \" \"cyan\"|\"}'
echo -n \"\$reset\"

# Cleanup...
rm -rf ~/Library/Application\ Support/Slack/Code\ Cache/ 2>/dev/zero
rm -rf ~/Library/Application\ Support/Slack/Cache/ 2>/dev/zero
rm -rf ~/Library/Application\ Support/Slack/Service\ Worker/CacheStorage/ 2>/dev/zero

rm -rf ~/Library/42_cache/ 2>/dev/zero
rm -rf ~/Library/Caches/CloudKit 2>/dev/zero
rm -rf ~/Library/Caches/com.apple.akd 2>/dev/zero
rm -rf ~/Library/Caches/com.apple.ap.adprivacyd 2>/dev/zero
rm -rf ~/Library/Caches/com.apple.appstore 2>/dev/zero
rm -rf ~/Library/Caches/com.apple.appstoreagent 2>/dev/zero
rm -rf ~/Library/Caches/com.apple.cache_delete 2>/dev/zero
rm -rf ~/Library/Caches/com.apple.commerce 2>/dev/zero
rm -rf ~/Library/Caches/com.apple.iCloudHelper 2>/dev/zero
rm -rf ~/Library/Caches/com.apple.imfoundation.IMRemoteURLConnectionAgent 2>/dev/zero
rm -rf ~/Library/Caches/com.apple.keyboardservicesd 2>/dev/zero
rm -rf ~/Library/Caches/com.apple.nbagent 2>/dev/zero
rm -rf ~/Library/Caches/com.apple.nsservicescache.plist 2>/dev/zero
rm -rf ~/Library/Caches/com.apple.nsurlsessiond 2>/dev/zero
rm -rf ~/Library/Caches/storeassetd 2>/dev/zero
rm -rf ~/Library/Caches/com.microsoft.VSCode.ShipIt 2>/dev/zero
rm -rf ~/Library/Caches/com.microsoft.VSCode 2>/dev/zero
rm -rf ~/Library/Caches/com.google.SoftwareUpdate 2>/dev/zero
rm -rf ~/Library/Caches/com.google.Keystone 2>/dev/zero
rm -rf ~/Library/Caches/com.apple.touristd 2>/dev/zero
rm -rf ~/Library/Caches/com.apple.tiswitcher.cache 2>/dev/zero
rm -rf ~/Library/Caches/com.apple.preferencepanes.usercache 2>/dev/zero
rm -rf ~/Library/Caches/com.apple.preferencepanes.searchindexcache 2>/dev/zero
rm -rf ~/Library/Caches/com.apple.parsecd 2>/dev/zero
rm -rf ~/Library/Caches/ 2>/dev/zero
rm -rf ~/.Trash/\* 2>/dev/zero
rm -rf ~/.kube/cache/\* 2>/dev/zero
rm -rf ~/Library/Containers/com.docker.docker/Data/vms/\* 2>/dev/zero
rm -rf ~/Library/Application\ Support/Firefox/Profiles/hdsrd79k.default-release/storage 2>/dev/zero
rm -rf ~/Library/42_cache 2>/dev/zero
rm -rf ~/Library/Application\ Support/Code/User/workspaceStorage 2>/dev/zero
rm -rf ~/Library/Application\ Support/Spotify/PersistentCache 2>/dev/zero
rm -rf ~/Library/Application\ Support/Telegram\ Desktop/tdata/user_data 2>/dev/zero
rm -rf ~/Library/Application\ Support/Telegram\ Desktop/tdata/emoji 2>/dev/zero
rm -rf ~/Library/Application\ Support/Code/Cache/Library/Application\ Support/Code/Cachei 2>/dev/zero
rm -rf ~/Library/Application\ Support/Code/CacheData 2>/dev/zero
rm -rf ~/Library/Application\ Support/Code/Cache 2>/dev/zero
rm -rf ~/Library/Application\ Support/Code/Crashpad/completed 2>/dev/zero
rm -rf ~/Library/Caches/\* 2>/dev/zero
rm -rf ~/Library/Application\ Support/Slack/Cache/\* 2>/dev/zero
rm -rf ~/Library/Application\ Support/Slack/Service\ Worker/CacheStorage/\* 2>/dev/zero
rm -rf ~/Library/Group\ Containers/6N38VWS5BX.ru.keepcoder.Telegram/account-570841890615083515/postbox/\* 2>/dev/zero
rm -rf ~/Library/Caches 2>/dev/zero
rm -rf ~/Library/Application\ Support/Code/CachedData 2>/dev/zero
rm -rf ~/Library/Application\ Support/Code/CachedExtension 2>/dev/zero
rm -rf ~/Library/Application\ Support/Code/CachedExtensions 2>/dev/zero
}
"



echo "\033c"
echo "$GREEN\t\t\t\t\t\tWell Come!$END"
echo "\t\t\t\t\tNow you can use next functions:"
echo "$BLUE check @git-project link\t $DARKYELLOW Check clang and cppcheck.$END"
echo "$BLUE clone @git-project link\t $DARKYELLOW Clone project, create branch develop, fix gitignore (default add .DS_Store), push with commit start. $END"
echo "$BLUE push or push @commit   \t $DARKYELLOW Applay clang-format *.cc *.h *.cpp, push develop (or create) $END"
echo "$BLUE brsw                   \t $DARKYELLOW Install lcov $END"
echo "$BLUE clean                   \t $DARKYELLOW Clean memory $END"
echo "\n Don't forget to restart the terminal"



cd ~
echo "$push" > .zprofile
echo "$brsw" >> .zprofile
echo "$check" >> .zprofile
echo "$clone" >> .zprofile
echo "$clean" >> .zprofile
